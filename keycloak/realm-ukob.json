{
    "realm": "test",
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "requiredCredentials": [ "password" ],
    "users": [
        {
            "username": "john",
            "enabled": true,
            "credentials": [
                {
                    "type": "password",
                    "value": "john"
                }
            ],
            "realmRoles": [
                "offline_access"
            ],
            "attributes": {
                "country": "UK",
                "phoneNumber": "01234567890",
                "phoneNumberVerified" : true,
                "website": "https://john.example.com",
                "zoneinfo": "Europe",
                "birthdate": "1 Jan 2000",
                "gender": "Male",
                "profile": "my profile",
                "picture": "https://john.example.com/picture",
                "updatedAt": 1582521468,
                "locale": "UK",
                "firstName": "Josiah",
                "middleName": "Willard",
                "lastName": "Doe",
                "nickname": "John",
                "email": "john@john.example.com",
                "name": "DJ" 
            }
        },
        {
            "username": "mike",
            "enabled": true,
            "credentials": [
                {
                    "type": "password",
                    "value": "mike"
                }
            ]
        }
    ],
    "clients": [
        {
            "id" : "98959b76-5837-4c4d-9357-a5867e160f85",
            "clientId": "client1-private_key_jwt-PS256-PS256-fapi-uk-ob",
            "bearerOnly": false,
            "consentRequired": true,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": true,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "enabled": true,
            "clientAuthenticatorType": "client-jwt",
            "fullScopeAllowed": true,
            "protocol": "openid-connect",
            "redirectUris": [
                "https://www.certification.openid.net/test/a/keycloak/callback",
                "https://staging.certification.openid.net/test/a/keycloak/callback",
                "https://demo.certification.openid.net/test/a/keycloak/callback",
                "https://localhost:8443/test/a/keycloak/callback",
                "https://localhost:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback",
                "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://localhost.emobix.co.uk/test/a/keycloak/callback",
                "https://localhost.emobix.co.uk/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback",
                "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback",
                "https://staging.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://www.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://demo.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum"
            ],
            "attributes": {
                "request.object.signature.alg": "PS256",
                "jwks.string": "{\"keys\": [\n    {\n        \"use\": \"sig\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client1-PS256\",\n        \"alg\": \"PS256\",\n        \"n\": \"0J5vAPXfZS755gaBYn2PEakdHLtAmZc0cKA5wTL89V4uz9sdkiub-S91cJUTqfxqFFwFe-acTKW7-HKOusJREq3oWNyv394-2OXSDz15Lso6GEATorSRTWzfqUjogjOOBxrvxrcMyxS2RM_NjaNPw2PDWO6u0_BHPWbzyKdKbzzGsuqpd4bZ85-xzDXhXRe0n23GCnGxpPM0SvsW9CAme23-ET_F6VdfPKkX0GSU_vxdwEwGUrk5sbBmtoLcj-pfpJKaA7ZbtLsngrIVIPRNUdcP3eCPiYHrDltsi1wnWlnRj2OBcqfM6bVOQfIiVLv-UC2PgY9gmzzw-Q86GPBQOw\",\n        \"e\": \"AQAB\"\n    },\n    {\n        \"use\": \"enc\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client1-OAEP\",\n        \"alg\": \"RSA-OAEP\",\n        \"n\": \"sizy7HrxRWsnZluxGYI7I9RStrHgaIjBkHBDnHHIrAgPWbKOB4wtRpES2pnn9CZ2KZdK1ETHMnswyPYeMn_u6vhL6NxO9sQ2-84fqxoW9vdy-LkQvRf9vp2Zcxu8RwzDDG7vBeTdJ1fez24jEj8itI-j84CEsUND6DnHFbaEVrQvKM21r1ViwVOS22Rv2ChOYX4Smt3OUkAzz6yoa_JETFcQxTnLAbkiRX3FQBkOynfZSjxPD7DXz_CFh1ZlubkAHmTnCtblFpj2Rt4T3IVqNjV0Mxb0vhvnzFizPPWFLHwvcwUsNEouKgP798eimT3gq9F3Q0NlwS6prlpzrt7L-Q\",\n        \"e\": \"AQAB\"\n    }]\n}",
                "jwt.credential.kid": "client1-PS256",
                "access.token.signed.response.alg": "RS256",
                "exclude.session.state.from.auth.response": "false",
                "id.token.signed.response.alg": "PS256",
                "id.token.encrypted.response.alg": "RSA-OAEP",
                "id.token.encrypted.response.enc": "A128GCM",
                "request.object.required": "request or request_uri",
                "tls.client.certificate.bound.access.tokens": "true",
                "use.jwks.url": "false",
                "use.jwks.string": "true",
                "acr.loa.map": "{\"urn:openbanking:psd2:sca\":\"1\",\"urn:openbanking:psd2:ca\":\"1\"}"
            },
            "protocolMappers": [
              {
                "name": "obclaims",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-claims-param-token-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "name": "acr mapper",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true"
                }
              },
              {
                "name": "aud",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-mapper",
                "consentRequired": false,
                "config": {
                  "included.client.audience": "resource-server",
                  "id.token.claim": "false",
                  "access.token.claim": "true"
                }
              },
              {
                "name": "oidc claims param value idtoken mappe",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-claims-param-value-idtoken-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "claim.name": "openbanking_intent_id"
                }
              }
            ],
            "defaultClientScopes": [
                "name_claims",
                "web-origins",
                "roles"
            ],
            "optionalClientScopes": [
                "profile",
                "email",
                "address",
                "phone",
                "consent:1",
                "offline_access",
                "consents",
                "resources",
                "microprofile-jwt",
                "accounts"
            ]
        },
        {
            "id" : "2231e266-4444-4764-93b8-538bd3ad6b93",
            "clientId": "client2-private_key_jwt-PS256-PS256-fapi-uk-ob",
            "bearerOnly": false,
            "consentRequired": true,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": true,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "publicClient": false,
            "enabled": true,
            "clientAuthenticatorType": "client-jwt",
            "fullScopeAllowed": true,
            "protocol": "openid-connect",
            "redirectUris": [
                "https://www.certification.openid.net/test/a/keycloak/callback",
                "https://staging.certification.openid.net/test/a/keycloak/callback",
                "https://demo.certification.openid.net/test/a/keycloak/callback",
                "https://localhost:8443/test/a/keycloak/callback",
                "https://localhost:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback",
                "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://localhost.emobix.co.uk/test/a/keycloak/callback",
                "https://localhost.emobix.co.uk/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback",
                "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback",
                "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback",
                "https://staging.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://www.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://demo.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
                "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum"
            ],
            "attributes": {
                "request.object.signature.alg": "PS256",
                "jwks.string": "{\"keys\": [\n    {\n        \"use\": \"sig\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client2-PS256\",\n        \"alg\": \"PS256\",\n        \"n\": \"6DHkboNmEegAyz9N6ux6UwEyI7a2pB3Dv-EOalRuvtqhh6jPsUd6TQZk385DzofNgYZaO1kC9wmYqD4mmQO7N6ZMvZQAbMmCat72-vHKxvZYzjcURMHTK-GDtvOUjbXzC3C0yboOS8qnO5etwho5PXETe3xdgjnERSekgAXdqzGxJEKincPWzcpoaPTpWROf4D9wNnS-rgwyd0CKp20NzoByhUtxMOKJn2t6wmBqgp7SEVOOgwRPEKMiD8u14jY-9xNfG3kOdAHMArSFb5HJN6USyFmFXROczEXOwJgvoCkY0p0hg2NCzImkPgbDmdj_otzLGjB9m3gtIoAa7THzKQ\",\n        \"e\": \"AQAB\"\n    },\n    {\n        \"use\": \"enc\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client2-OAEP\",\n        \"alg\": \"RSA-OAEP\",\n        \"n\": \"qPNLdO3qcM4E4QU-bGiYaWSIY4tL52uDOz8o4oyFNBFAp7-W98ybc0Kww1FsguOfQqQq7w2x8NAcxX6W-roytufcn3o-o8gI_8y3gc130H-L7jjSt5pyfiI8xiiYkGuI5xwTHwAlr_WrbaEzm9EiMLoVyzmgZATYNfdLsCzlAq8HOdu0MSatBxoD8Xn05MrNwFlno8fkh8DE6hwqSKPcIBqNEccDqwiq2PZd3o8Gh85F9ISALSamsjKutjpIOsax-odOVCmUa1ae98HEgWZOg4MlU2hOsS4QKNSj54Pa766v-FlS99Tq8mSt2gjLVANeWKUOR5C29zPFcV7WrkKhWQ\",\n        \"e\": \"AQAB\"\n    }]\n}",
                "jwt.credential.kid": "client2-PS256",
                "access.token.signed.response.alg": "RS256",
                "exclude.session.state.from.auth.response": "false",
                "id.token.signed.response.alg": "PS256",
                "id.token.encrypted.response.alg": "RSA-OAEP",
                "id.token.encrypted.response.enc": "A128GCM",
                "request.object.required": "request or request_uri",
                "tls.client.certificate.bound.access.tokens": "true",
                "use.jwks.url": "false",
                "use.jwks.string": "true",
                "acr.loa.map": "{\"urn:openbanking:psd2:sca\":\"1\",\"urn:openbanking:psd2:ca\":\"1\"}"
            },
            "protocolMappers": [
              {
                "name": "obclaims",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-claims-param-token-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "name": "acr mapper",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true"
                }
              },
              {
                "name": "aud",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-mapper",
                "consentRequired": false,
                "config": {
                  "included.client.audience": "resource-server",
                  "id.token.claim": "false",
                  "access.token.claim": "true"
                }
              },
              {
                "name": "oidc claims param value idtoken mappe",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-claims-param-value-idtoken-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "claim.name": "openbanking_intent_id"
                 }
              }
            ],
            "defaultClientScopes": [
                "name_claims",
                "web-origins",
                "roles"
            ],
            "optionalClientScopes": [
                "profile",
                "email",
                "address",
                "phone",
                "consent:1",
                "offline_access",
                "consents",
                "resources",
                "microprofile-jwt",
                "accounts"
            ]
        },
        {
          "id" : "2376e1ab-94e3-45a0-b098-7a5627501070",
          "clientId": "client1-mtls-PS256-PS256-fapi-uk-ob",
          "bearerOnly": false,
          "consentRequired": true,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "enabled": true,
          "clientAuthenticatorType": "client-x509",
          "fullScopeAllowed": true,
          "protocol": "openid-connect",
          "redirectUris": [
              "https://www.certification.openid.net/test/a/keycloak/callback",
              "https://staging.certification.openid.net/test/a/keycloak/callback",
              "https://demo.certification.openid.net/test/a/keycloak/callback",
              "https://localhost:8443/test/a/keycloak/callback",
              "https://localhost:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback",
              "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://localhost.emobix.co.uk/test/a/keycloak/callback",
              "https://localhost.emobix.co.uk/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback",
              "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback",
              "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback",
              "https://staging.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://www.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://demo.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
              "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum"
          ],
          "attributes": {
            "x509.subjectdn": "CN=client1, OU=Keycloak-fapi, O=Secure OSS Sig, ST=Client, C=JP",
              "request.object.signature.alg": "PS256",
              "jwks.string": "{\"keys\": [\n    {\n        \"use\": \"sig\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client1-PS256\",\n        \"alg\": \"PS256\",\n        \"n\": \"0J5vAPXfZS755gaBYn2PEakdHLtAmZc0cKA5wTL89V4uz9sdkiub-S91cJUTqfxqFFwFe-acTKW7-HKOusJREq3oWNyv394-2OXSDz15Lso6GEATorSRTWzfqUjogjOOBxrvxrcMyxS2RM_NjaNPw2PDWO6u0_BHPWbzyKdKbzzGsuqpd4bZ85-xzDXhXRe0n23GCnGxpPM0SvsW9CAme23-ET_F6VdfPKkX0GSU_vxdwEwGUrk5sbBmtoLcj-pfpJKaA7ZbtLsngrIVIPRNUdcP3eCPiYHrDltsi1wnWlnRj2OBcqfM6bVOQfIiVLv-UC2PgY9gmzzw-Q86GPBQOw\",\n        \"e\": \"AQAB\"\n    },\n    {\n        \"use\": \"enc\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client1-OAEP\",\n        \"alg\": \"RSA-OAEP\",\n        \"n\": \"sizy7HrxRWsnZluxGYI7I9RStrHgaIjBkHBDnHHIrAgPWbKOB4wtRpES2pnn9CZ2KZdK1ETHMnswyPYeMn_u6vhL6NxO9sQ2-84fqxoW9vdy-LkQvRf9vp2Zcxu8RwzDDG7vBeTdJ1fez24jEj8itI-j84CEsUND6DnHFbaEVrQvKM21r1ViwVOS22Rv2ChOYX4Smt3OUkAzz6yoa_JETFcQxTnLAbkiRX3FQBkOynfZSjxPD7DXz_CFh1ZlubkAHmTnCtblFpj2Rt4T3IVqNjV0Mxb0vhvnzFizPPWFLHwvcwUsNEouKgP798eimT3gq9F3Q0NlwS6prlpzrt7L-Q\",\n        \"e\": \"AQAB\"\n    }]\n}",
              "jwt.credential.kid": "client1-PS256",
              "access.token.signed.response.alg": "RS256",
              "exclude.session.state.from.auth.response": "false",
              "id.token.signed.response.alg": "PS256",
              "id.token.encrypted.response.alg": "RSA-OAEP",
              "id.token.encrypted.response.enc": "A128GCM",
              "request.object.required": "request or request_uri",
              "tls.client.certificate.bound.access.tokens": "true",
              "use.jwks.url": "false",
              "use.jwks.string": "true",
              "acr.loa.map": "{\"urn:openbanking:psd2:sca\":\"1\",\"urn:openbanking:psd2:ca\":\"1\"}"
          },
          "protocolMappers": [
            {
              "name": "obclaims",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-claims-param-token-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "name": "acr mapper",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "name": "aud",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "resource-server",
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            },
            {
              "name": "oidc claims param value idtoken mappe",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-claims-param-value-idtoken-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "claim.name": "openbanking_intent_id"
              }
            }
          ],
          "defaultClientScopes": [
              "name_claims",
              "web-origins",
              "roles"
          ],
          "optionalClientScopes": [
              "profile",
              "email",
              "address",
              "phone",
              "consent:1",
              "offline_access",
              "consents",
              "resources",
              "microprofile-jwt",
              "accounts"
          ]
      },
      {
        "id" : "0ded4685-d9e8-406c-878a-3e8087ca36ba",
        "clientId": "client2-mtls-PS256-PS256-fapi-uk-ob",
        "bearerOnly": false,
        "consentRequired": true,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": true,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "enabled": true,
        "clientAuthenticatorType": "client-x509",
        "fullScopeAllowed": true,
        "protocol": "openid-connect",
        "redirectUris": [
            "https://www.certification.openid.net/test/a/keycloak/callback",
            "https://staging.certification.openid.net/test/a/keycloak/callback",
            "https://demo.certification.openid.net/test/a/keycloak/callback",
            "https://localhost:8443/test/a/keycloak/callback",
            "https://localhost:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback",
            "https://conformance-suite.keycloak-fapi.org/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://localhost.emobix.co.uk/test/a/keycloak/callback",
            "https://localhost.emobix.co.uk/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback",
            "https://localhost.emobix.co.uk:8443/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback",
            "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback",
            "https://staging.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://www.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://demo.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-1.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-2.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-3.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-4.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-5.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-6.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-7.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-8.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum",
            "https://review-app-dev-branch-9.certification.openid.net/test/a/keycloak/callback?dummy1=lorem&dummy2=ipsum"
        ],
        "attributes": {
            "x509.subjectdn": "CN=client2, OU=Keycloak-fapi, O=Secure OSS Sig, ST=Client, C=JP",
            "request.object.signature.alg": "PS256",
            "jwks.string": "{\"keys\": [\n    {\n        \"use\": \"sig\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client2-PS256\",\n        \"alg\": \"PS256\",\n        \"n\": \"6DHkboNmEegAyz9N6ux6UwEyI7a2pB3Dv-EOalRuvtqhh6jPsUd6TQZk385DzofNgYZaO1kC9wmYqD4mmQO7N6ZMvZQAbMmCat72-vHKxvZYzjcURMHTK-GDtvOUjbXzC3C0yboOS8qnO5etwho5PXETe3xdgjnERSekgAXdqzGxJEKincPWzcpoaPTpWROf4D9wNnS-rgwyd0CKp20NzoByhUtxMOKJn2t6wmBqgp7SEVOOgwRPEKMiD8u14jY-9xNfG3kOdAHMArSFb5HJN6USyFmFXROczEXOwJgvoCkY0p0hg2NCzImkPgbDmdj_otzLGjB9m3gtIoAa7THzKQ\",\n        \"e\": \"AQAB\"\n    },\n    {\n        \"use\": \"enc\",\n        \"kty\": \"RSA\",\n        \"kid\": \"client2-OAEP\",\n        \"alg\": \"RSA-OAEP\",\n        \"n\": \"qPNLdO3qcM4E4QU-bGiYaWSIY4tL52uDOz8o4oyFNBFAp7-W98ybc0Kww1FsguOfQqQq7w2x8NAcxX6W-roytufcn3o-o8gI_8y3gc130H-L7jjSt5pyfiI8xiiYkGuI5xwTHwAlr_WrbaEzm9EiMLoVyzmgZATYNfdLsCzlAq8HOdu0MSatBxoD8Xn05MrNwFlno8fkh8DE6hwqSKPcIBqNEccDqwiq2PZd3o8Gh85F9ISALSamsjKutjpIOsax-odOVCmUa1ae98HEgWZOg4MlU2hOsS4QKNSj54Pa766v-FlS99Tq8mSt2gjLVANeWKUOR5C29zPFcV7WrkKhWQ\",\n        \"e\": \"AQAB\"\n    }]\n}",
            "jwt.credential.kid": "client2-PS256",
            "access.token.signed.response.alg": "RS256",
            "exclude.session.state.from.auth.response": "false",
            "id.token.signed.response.alg": "PS256",
            "id.token.encrypted.response.alg": "RSA-OAEP",
            "id.token.encrypted.response.enc": "A128GCM",
            "request.object.required": "request or request_uri",
            "tls.client.certificate.bound.access.tokens": "true",
            "use.jwks.url": "false",
            "use.jwks.string": "true",
            "acr.loa.map": "{\"urn:openbanking:psd2:sca\":\"1\",\"urn:openbanking:psd2:ca\":\"1\"}"
        },
        "protocolMappers": [
          {
            "name": "obclaims",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-claims-param-token-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "name": "acr mapper",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "name": "aud",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper",
            "consentRequired": false,
            "config": {
                "included.client.audience": "resource-server",
                "id.token.claim": "false",
                "access.token.claim": "true"
            }
          },
          {
            "name": "oidc claims param value idtoken mappe",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-claims-param-value-idtoken-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "claim.name": "openbanking_intent_id"
            }
          }
        ],
        "defaultClientScopes": [
            "name_claims",
            "web-origins",
            "roles"
        ],
        "optionalClientScopes": [
            "profile",
            "email",
            "address",
            "phone",
            "consent:1",
            "offline_access",
            "consents",
            "resources",
            "microprofile-jwt",
            "accounts"
        ]
      },
      {
        "clientId": "resource-server",
        "bearerOnly": true,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "enabled": true,
        "clientAuthenticatorType": "client-secret",
        "secret": "2ef90464-b0fc-4e06-965d-19ef671a3e22",
        "fullScopeAllowed": true,
        "protocol": "openid-connect",
        "redirectUris": [
        ],
        "attributes": {
        }
      }
    ],
    "clientScopes": [
        {
            "id": "27843258-0472-4cb9-a02f-73c2350cefe5",
            "name": "name_claims",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "fa5ad3e3-451f-440b-bf30-1ee9162e3a91",
                "name": "name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-claims-param-token-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "false",
                  "userinfo.token.claim": "true"
                }
              }
            ]
        },
        {
          "id": "21b3f466-1003-4f8c-bf9b-5f6c98b119a5",
          "name": "consents",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "0a8dc54f-3849-40e1-a11c-1fa1a2ccabe2",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "6bca8fad-d624-497f-80d1-2bd64fdf830b",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "43042b34-1968-4ad1-a63e-82253bc4d6ca",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "d572a8af-a113-413e-873f-14b1b83b215f",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "b8b4e7a6-2467-4f47-8093-00079e0f808f",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "9e4b6315-633e-4c46-8a2c-3e7ceb279618",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "ee50943a-cf95-4065-b21d-3476d9bea57b",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "0f670471-5b19-4ddd-9b3b-9ea91ad0f86b",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "3c65ecc1-7a8f-4ca9-b541-839203012153",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "9867f7dd-6e76-4aae-bd76-46597d474628",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "f6017440-3a27-4839-85c1-c3518fb61f8f",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "c0b6fa7e-a4cd-445a-acc0-b0622734d3c1",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "c066ab1e-af2e-449f-bc37-040c097ecb14",
          "name": "consent:1",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "9ccdb41e-63c9-4e5e-830e-f3e62421f2ed",
          "name": "accounts",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "40a69e94-8378-4df4-b2d4-5eb9e48ed64e",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "2c03e2a0-7248-4575-88a0-7b870ed23959",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3740c273-e6c1-4443-bfe9-2dc3deef5224",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "dd4f7db6-461d-40d9-b001-7bbf1e61c876",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "d54988c1-d1cf-4163-863e-3180e28e6ae5",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7f796a2e-ef1c-46da-97e6-6fad2380f1d2",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7406957b-67b5-44a3-9aaf-1ecade5c3a8b",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "99bef57c-9fd6-4dc0-be8a-00dc445085ff",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "97e193ba-f358-48c6-afde-94be6b2764f5",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7cd9bda4-242c-48b0-b3b2-b26ed2f4083b",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1bc3ec5f-0cac-4822-8e52-a96215b880f0",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b2709b59-5c34-47d1-a47c-8ebba25cb01e",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1f1a0dca-7bda-47a5-b6aa-fd72bb6eca0e",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c1f9c3f2-f5e5-46e2-b9a0-6b06e776db27",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5a9cd6fe-09eb-4aa5-ab5f-7125a56aa7f7",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "aedef97d-abb0-495a-b4fc-61afe5ed8310",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "fc90f490-d31d-4d4d-be1a-c61d42451768",
          "name": "resources",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "3405c686-2e5e-41f7-be5c-1e6a165085ac",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "0ae2d950-91d2-4e16-bd2d-592a164f3f99",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "1be279ef-603b-4fc8-b9c3-c42b105dbbcc",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "3a58e1c2-9d7e-43a0-a54c-8862fc091f81",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            }
          ]
        },
        {
          "id": "708d9438-8fdf-4f5d-aa45-ee8ec8467cae",
          "name": "email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "5e8322f9-1dee-4e3f-8702-2a41b9103a63",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "false",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "d0602f9a-555c-442f-a171-838af637348e",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "false",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "e0b746d5-3342-4a2b-a35a-365c4abd364e",
          "name": "name_claims_for_implicit",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "28e497d2-0cf0-471d-8752-47e7329ce18d",
              "name": "name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-claims-param-token-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "name_claims",
        "roles",
        "role_list",
        "web-origins"
      ],
      "defaultOptionalClientScopes": [
        "address",
        "phone",
        "profile",
        "email",
        "microprofile-jwt",
        "offline_access"
      ],    
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "5e3adcf8-d922-4f99-a773-8e41fba12127",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "82e5636c-a903-4140-a1a8-a819b32a70bd",
          "name": "consent required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "3091d11e-a07c-42bf-a3c8-b714c1a3125f",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
                "priority": [
                    "100"
                ]
            }
        },
        {
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
                "priority": [
                    "100"
                ]
            }
        },
        {
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
                "priority": [
                    "100"
                ],
                "algorithm": [
                    "HS256"
                ]
            }
        },
        {
            "name": "PS256",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
                "keySize": [
                    "2048"
                ],
                "active": [
                    "true"
                ],
                "priority": [
                    "100"
                ],
                "enabled": [
                    "true"
                ],
                "algorithm": [
                    "PS256"
                ]
            }
        },
        {
            "name": "ES256",
            "providerId": "ecdsa-generated",
            "subComponents": {},
            "config": {
                "ecdsaEllipticCurveKey": [
                    "P-256"
                ],
                "active": [
                    "true"
                ],
                "priority": [
                    "100"
                ],
                "enabled": [
                    "true"
                ]
            }
        },
        {
            "id": "770362b2-6f1f-4216-a222-b1439e96f10a",
            "name": "rsa-generated-enc",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
                "keySize": [
                    "2048"
                ],
                "keyUse": [
                    "enc"
                ],
                "active": [
                    "true"
                ],
                "priority": [
                    "100"
                ],
                "enabled": [
                    "true"
                ],
                "algorithm": [
                    "PS256"
                ]
            }
        }
    ]
},
"clientProfiles" : {
    "profiles" : [
        {
            "name" : "fapi-1-advanced-par",
            "description": "Client profile, which enforce clients to conform 'Financial-grade API Security Profile 1.0 - Part 2: Advanced' specification. PAR is also used.",
            "executors" : [
                {
                    "executor": "pkce-enforcer",
                    "configuration": {
                      "auto-configure": true
                    }
                }
            ]
        },
        {
          "name" : "uk-ob",
          "description": "UK-OB",
          "executors" : [
            {
              "executor": "intent-client-bind-checker",
              "configuration": {
                "intent-client-bind-check-endpoint": "http://resource_server:3000/check-intent-client-bound",
                "intent-name": "openbanking_intent_id"
              }
            }
          ]
      }
    ]
},
"clientPolicies" : {
    "policies" : [
    {
        "name" : "fapi-1-0-policy",
        "description" : "The policy for FAPI 1.0 security profile",
        "enabled" : true,
        "conditions" : [ {
            "condition" : "client-roles",
            "configuration" : {
                "roles" : [ "fapi1-advanced-client-role" ]
            }
        } ],
        "profiles" : [ "fapi-1-advanced" ]
    },
    {
        "name" : "fapi1-advanced-jarm-policy",
        "description" : "The policy for FAPI 1.0 JARM security profile",
        "enabled" : true,
        "conditions" : [ {
            "condition" : "client-roles",
            "configuration" : {
                "roles" : [ "fapi1-advanced-jarm-client-role" ]
            }
        } ],
        "profiles" : [ "fapi-1-advanced" ]
    },
    {
        "name" : "fapi1-advanced-par-jarm-policy",
        "description" : "The policy for FAPI 1.0 PAR JARM security profile",
        "enabled" : true,
        "conditions" : [ {
            "condition" : "client-roles",
            "configuration" : {
                "roles" : [ "fapi1-advanced-par-jarm-client-role" ]
            }
        } ],
        "profiles" : [ "fapi-1-advanced", "fapi-1-advanced-par" ]
    },
    {
      "name" : "uk-ob-policy",
      "description" : "UK-OB policy",
      "enabled" : true,
      "conditions" : [ {
          "condition" : "client-roles",
          "configuration" : {
              "roles" : [ "uk-ob-role" ]
          }
      } ],
      "profiles" : [ "fapi-1-advanced", "uk-ob" ]
  }
  ]
},
"roles" : {
    "client" : {
        "client1-mtls-PS256-PS256-fapi-uk-ob" : [ {
            "name" : "uk-ob-role",
            "description" : "Client role for uk-ob",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "2376e1ab-94e3-45a0-b098-7a5627501070"
        } ],
        "client2-mtls-PS256-PS256-fapi-uk-ob" : [ {
            "name" : "uk-ob-role",
            "description" : "Client role for uk-ob",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "0ded4685-d9e8-406c-878a-3e8087ca36ba"
        } ],
        "client1-private_key_jwt-PS256-PS256-fapi-uk-ob" : [ {
          "name" : "uk-ob-role",
          "description" : "Client role for uk-ob",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "98959b76-5837-4c4d-9357-a5867e160f85"
        } ],
        "client2-private_key_jwt-PS256-PS256-fapi-uk-ob" : [ {
          "name" : "uk-ob-role",
          "description" : "Client role for uk-ob",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "2231e266-4444-4764-93b8-538bd3ad6b93"
      } ]
    }
  },
  "authenticationFlows": [
      {
        "id": "b25b9270-cf88-4c7e-ad84-7668a3374b0d",
        "alias": "1st Condition Flow",
        "description": "",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "Level 0",
            "authenticator": "conditional-level-of-authentication",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 0,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 1,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7f86d527-5013-4e41-9a83-79db6403fe24",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7f503a96-ab71-4215-9463-a1f6a0a7680f",
        "alias": "Auth Flow",
        "description": "",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 0,
            "autheticatorFlow": true,
            "flowAlias": "1st Condition Flow",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bb06b230-5f22-4ca8-9df3-ea6f1c9bd865",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "df294501-34a2-423d-8714-cc4a273c02ca",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a30579f5-c2dd-4969-94ed-58e6c416f4a8",
        "alias": "Browser Incl Step up Mechanism",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Auth Flow",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "76443b71-3687-4400-8a6e-0279e7c02f4b",
        "alias": "Browser Incl Step up Mechanism Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c34ed387-92b4-4487-94ff-723d8e2b23c1",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2f4eb238-63e0-4a98-a4a3-9a3c9b0748ea",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8aa81f84-e6bf-40d3-b011-5030a806e4bc",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8bc5e430-b2e6-4e87-9a49-70f57d8db671",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f3a42a27-adf0-4f38-a4f3-fdc9fc8c9d7f",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "90d61ff8-c2cc-48c6-aeb8-222824e36c8d",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f13d16a0-3825-4277-8333-ee9d5238a98f",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "65f68d8a-8f41-4541-b4fd-badbfb50dea1",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e9650910-fc9d-4ac2-aa79-edbaba6d5dea",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ee9780bf-3333-4ce6-8646-21b47fbb969b",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bfbc708e-3b60-4b62-aa6e-59d3db0bfa45",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d2effaf5-6784-4853-8262-fbc5eb2e4865",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1cf942d3-811e-4cca-aef8-e7a968787963",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "154c25b4-27d2-4546-bcde-2dd9bd143f7e",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "510a6043-4649-4769-88c0-bac74340cf99",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b58fd2e7-bd3a-4276-8a43-251e8b7fe38c",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "acaeaf82-3f34-4119-9045-4f1881feed05",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "2993e3a9-010d-490e-b99e-8c639472eb42",
        "alias": "Level 0",
        "config": {
          "loa-condition-level": "0",
          "loa-store-in-user-session": "true"
        }
      },
      {
        "id": "e3e09b3e-41ca-48bf-ad4c-2d87856bbc08",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "087c4544-3c66-4b71-a4b0-24fbdda6b995",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser"
}