defaults
  log stdout  format raw  local0  debug
  option tcplog
  timeout client 30s
  timeout server 30s
  timeout connect 5s

frontend ft_ssl_vip
  bind *:443
  mode tcp
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  acl application_1 req_ssl_sni -i "${KEYCLOAK_FQDN}"
  acl application_2 req_ssl_sni -i "${RESOURCE_FQDN}"
  acl application_3 req_ssl_sni -i "${CONFORMANCE_SUITE_FQDN}"

  use_backend bk_ssl_application_1 if application_1
  use_backend bk_ssl_application_2 if application_2
  use_backend bk_ssl_application_3 if application_3

  default_backend bk_ssl_application_2

backend bk_ssl_application_1
  mode tcp

  acl clienthello req_ssl_hello_type 1
  acl serverhello rep_ssl_hello_type 2

  # use tcp content accepts to detects ssl client and server hello.
  tcp-request inspect-delay 5s
  tcp-request content accept if clienthello

  # no timeout on response inspect delay by default.
  tcp-response content accept if serverhello

  option ssl-hello-chk
  server server1 keycloak:9443 check

backend bk_ssl_application_2
  mode tcp

  #acl clienthello req_ssl_hello_type 1
  #acl serverhello rep_ssl_hello_type 2

  # use tcp content accepts to detects ssl client and server hello.
  #tcp-request inspect-delay 5s
  #tcp-request content accept if clienthello

  # no timeout on response inspect delay by default.
  #tcp-response content accept if serverhello

  #option ssl-hello-chk
  server server1 api_gateway_nginx:443 check

backend bk_ssl_application_3
  mode tcp

  #acl clienthello req_ssl_hello_type 1

  # use tcp content accepts to detects ssl client hello.
  #tcp-request inspect-delay 5s
  #tcp-request content accept if clienthello

  #option ssl-hello-chk
  server server1 httpd:8443 check
